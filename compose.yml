services:
  # ------------------------
  # API service
  # ------------------------
  api:
    build: .
    container_name: rag-api
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/search || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    env_file:
      - .env
    environment:
      - OPENSEARCH_HOST=http://opensearch:9200
      - OPENSEARCH__HOST=http://opensearch:9200
      - OLLAMA_HOST=http://ollama:11434
      - POSTGRES_DATABASE_URL=postgresql+psycopg2://rag_user:rag_password@postgres:5432/rag_db
      - REDIS__HOST=redis
    networks:
      - rag-network
  
  grobid:
    image: lfoppiano/grobid:latest-crf-multi-arch
    # platform: linux/amd64
    ports:
      - "8070:8070"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8070/api/isalive"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - rag-network
  # ------------------------
  # Airflow service
  # ------------------------
  airflow:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    image: rag-airflow:latest
    container_name: rag-airflow
    depends_on:
      grobid:
        condition: service_healthy
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - GROBID_URL=http://grobid:8070 
      - AIRFLOW_HOME=/opt/airflow
      - PYTHONPATH=/opt/airflow:/opt/airflow/src
      - POSTGRES_DATABASE_URL=postgresql+psycopg2://rag_user:rag_password@postgres:5432/rag_db
      - OPENSEARCH_HOST=http://opensearch:9200
      - OLLAMA_HOST=http://ollama:11434
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./api:/opt/airflow/api
      - ./data:/opt/airflow/data
      - airflow_logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    networks:
      - rag-network

  # ------------------------
  # OpenSearch
  # ------------------------
  opensearch:
    image: opensearchproject/opensearch:2.19.0
    container_name: rag-opensearch
    environment:
      - OPENSEARCH_HOST=opensearch
      - OPENSEARCH_PORT=9200
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms2g -Xmx2g
      - DISABLE_SECURITY_PLUGIN=true
      - bootstrap.memory_lock=true
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 15  # ✅ More retries
      start_period: 60s  # ✅ Longer startup
    networks:
      - rag-network

  redis:
    image: redis:7-alpine
    container_name: rag-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - rag-network

  # ------------------------
  # OpenSearch Dashboards
  # ------------------------
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.19.0
    container_name: rag-dashboards
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    depends_on:
      - opensearch
    networks:
      - rag-network

  # ------------------------
  # Ollama
  # ------------------------
  ollama:
    image: ollama/ollama:0.11.2
    container_name: rag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    networks:
      - rag-network

  # ------------------------
  # Postgres
  # ------------------------
  postgres:
    image: postgres:16-alpine
    container_name: rag-postgres
    environment:
      - POSTGRES_DB=rag_db
      - POSTGRES_USER=rag_user
      - POSTGRES_PASSWORD=rag_password
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rag_user -d rag_db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - rag-network

volumes:
  postgres_data:
  opensearch_data:
  ollama_data:
  airflow_logs:
  redis_data:

networks:
  rag-network:
    driver: bridge
